/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DCLToken, DCLTokenInterface } from "../DCLToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200236d3803806200236d8339818101604052810190620000379190620003ca565b8181816003908051906020019062000051929190620002a8565b5080600490805190602001906200006a929190620002a8565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000620000c06200011c60201b60201c565b600a620000ce9190620005dc565b6103e8620000dd919062000719565b905062000113600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826200012560201b60201c565b50505062000907565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000198576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018f9062000475565b60405180910390fd5b620001ac600083836200029e60201b60201c565b8060026000828254620001c0919062000524565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000217919062000524565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027e919062000497565b60405180910390a36200029a60008383620002a360201b60201c565b5050565b505050565b505050565b828054620002b690620007c7565b90600052602060002090601f016020900481019282620002da576000855562000326565b82601f10620002f557805160ff191683800117855562000326565b8280016001018555821562000326579182015b828111156200032557825182559160200191906001019062000308565b5b50905062000335919062000339565b5090565b5b80821115620003545760008160009055506001016200033a565b5090565b60006200036f6200036984620004dd565b620004b4565b9050828152602081018484840111156200038857600080fd5b6200039584828562000791565b509392505050565b600082601f830112620003af57600080fd5b8151620003c184826020860162000358565b91505092915050565b60008060408385031215620003de57600080fd5b600083015167ffffffffffffffff811115620003f957600080fd5b62000407858286016200039d565b925050602083015167ffffffffffffffff8111156200042557600080fd5b62000433858286016200039d565b9150509250929050565b60006200044c601f8362000513565b91506200045982620008de565b602082019050919050565b6200046f816200077a565b82525050565b6000602082019050818103600083015262000490816200043d565b9050919050565b6000602082019050620004ae600083018462000464565b92915050565b6000620004c0620004d3565b9050620004ce8282620007fd565b919050565b6000604051905090565b600067ffffffffffffffff821115620004fb57620004fa62000891565b5b6200050682620008c0565b9050602081019050919050565b600082825260208201905092915050565b600062000531826200077a565b91506200053e836200077a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000576576200057562000833565b5b828201905092915050565b6000808291508390505b6001851115620005d357808604811115620005ab57620005aa62000833565b5b6001851615620005bb5780820291505b8081029050620005cb85620008d1565b94506200058b565b94509492505050565b6000620005e9826200077a565b9150620005f68362000784565b9250620006257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200062d565b905092915050565b6000826200063f576001905062000712565b816200064f576000905062000712565b81600181146200066857600281146200067357620006a9565b600191505062000712565b60ff84111562000688576200068762000833565b5b8360020a915084821115620006a257620006a162000833565b5b5062000712565b5060208310610133831016604e8410600b8410161715620006e35782820a905083811115620006dd57620006dc62000833565b5b62000712565b620006f2848484600162000581565b925090508184048111156200070c576200070b62000833565b5b81810290505b9392505050565b600062000726826200077a565b915062000733836200077a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200076f576200076e62000833565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007b157808201518184015260208101905062000794565b83811115620007c1576000848401525b50505050565b60006002820490506001821680620007e057607f821691505b60208210811415620007f757620007f662000862565b5b50919050565b6200080882620008c0565b810181811067ffffffffffffffff821117156200082a576200082962000891565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a5680620009176000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461025f578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806370a08231146101f55780637b47ec1a146102255780638da5cb5b14610241576100ea565b806318160ddd116100c857806318160ddd1461015957806323b872dd14610177578063313ce567146101a757806339509351146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d578063179d375c1461013d575b600080fd5b6100f761030d565b60405161010491906113c1565b60405180910390f35b61012760048036038101906101229190611153565b61039f565b60405161013491906113a6565b60405180910390f35b6101576004803603810190610152919061118f565b6103c2565b005b61016161044b565b60405161016e9190611523565b60405180910390f35b610191600480360381019061018c9190611104565b610455565b60405161019e91906113a6565b60405180910390f35b6101af610484565b6040516101bc919061153e565b60405180910390f35b6101df60048036038101906101da9190611153565b61048d565b6040516101ec91906113a6565b60405180910390f35b61020f600480360381019061020a919061109f565b610537565b60405161021c9190611523565b60405180910390f35b61023f600480360381019061023a919061118f565b61057f565b005b610249610608565b604051610256919061138b565b60405180910390f35b61026761062e565b60405161027491906113c1565b60405180910390f35b61029760048036038101906102929190611153565b6106c0565b6040516102a491906113a6565b60405180910390f35b6102c760048036038101906102c29190611153565b6107aa565b6040516102d491906113a6565b60405180910390f35b6102f760048036038101906102f291906110c8565b6107cd565b6040516103049190611523565b60405180910390f35b60606003805461031c90611687565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611687565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b6000806103aa610854565b90506103b781858561085c565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041c57600080fd5b610448600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610a27565b50565b6000600254905090565b600080610460610854565b905061046d858285610b87565b610478858585610c13565b60019150509392505050565b60006012905090565b600080610498610854565b905061052c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105279190611575565b61085c565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d957600080fd5b610605600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610e94565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461063d90611687565b80601f016020809104026020016040519081016040528092919081815260200182805461066990611687565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6000806106cb610854565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610791576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610788906114e3565b60405180910390fd5b61079e828686840361085c565b60019250505092915050565b6000806107b5610854565b90506107c2818585610c13565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c3906114c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390611423565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a1a9190611523565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e90611503565b60405180910390fd5b610aa36000838361106b565b8060026000828254610ab59190611575565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b0a9190611575565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b6f9190611523565b60405180910390a3610b8360008383611070565b5050565b6000610b9384846107cd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c0d5781811015610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611443565b60405180910390fd5b610c0c848484840361085c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a906114a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cea906113e3565b60405180910390fd5b610cfe83838361106b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90611463565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e179190611575565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e7b9190611523565b60405180910390a3610e8e848484611070565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611483565b60405180910390fd5b610f108260008361106b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8d90611403565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610fed91906115cb565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110529190611523565b60405180910390a361106683600084611070565b505050565b505050565b505050565b600081359050611084816119f2565b92915050565b60008135905061109981611a09565b92915050565b6000602082840312156110b157600080fd5b60006110bf84828501611075565b91505092915050565b600080604083850312156110db57600080fd5b60006110e985828601611075565b92505060206110fa85828601611075565b9150509250929050565b60008060006060848603121561111957600080fd5b600061112786828701611075565b935050602061113886828701611075565b92505060406111498682870161108a565b9150509250925092565b6000806040838503121561116657600080fd5b600061117485828601611075565b92505060206111858582860161108a565b9150509250929050565b6000602082840312156111a157600080fd5b60006111af8482850161108a565b91505092915050565b6111c1816115ff565b82525050565b6111d081611611565b82525050565b60006111e182611559565b6111eb8185611564565b93506111fb818560208601611654565b61120481611717565b840191505092915050565b600061121c602383611564565b915061122782611728565b604082019050919050565b600061123f602283611564565b915061124a82611777565b604082019050919050565b6000611262602283611564565b915061126d826117c6565b604082019050919050565b6000611285601d83611564565b915061129082611815565b602082019050919050565b60006112a8602683611564565b91506112b38261183e565b604082019050919050565b60006112cb602183611564565b91506112d68261188d565b604082019050919050565b60006112ee602583611564565b91506112f9826118dc565b604082019050919050565b6000611311602483611564565b915061131c8261192b565b604082019050919050565b6000611334602583611564565b915061133f8261197a565b604082019050919050565b6000611357601f83611564565b9150611362826119c9565b602082019050919050565b6113768161163d565b82525050565b61138581611647565b82525050565b60006020820190506113a060008301846111b8565b92915050565b60006020820190506113bb60008301846111c7565b92915050565b600060208201905081810360008301526113db81846111d6565b905092915050565b600060208201905081810360008301526113fc8161120f565b9050919050565b6000602082019050818103600083015261141c81611232565b9050919050565b6000602082019050818103600083015261143c81611255565b9050919050565b6000602082019050818103600083015261145c81611278565b9050919050565b6000602082019050818103600083015261147c8161129b565b9050919050565b6000602082019050818103600083015261149c816112be565b9050919050565b600060208201905081810360008301526114bc816112e1565b9050919050565b600060208201905081810360008301526114dc81611304565b9050919050565b600060208201905081810360008301526114fc81611327565b9050919050565b6000602082019050818103600083015261151c8161134a565b9050919050565b6000602082019050611538600083018461136d565b92915050565b6000602082019050611553600083018461137c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006115808261163d565b915061158b8361163d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115c0576115bf6116b9565b5b828201905092915050565b60006115d68261163d565b91506115e18361163d565b9250828210156115f4576115f36116b9565b5b828203905092915050565b600061160a8261161d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611672578082015181840152602081019050611657565b83811115611681576000848401525b50505050565b6000600282049050600182168061169f57607f821691505b602082108114156116b3576116b26116e8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6119fb816115ff565b8114611a0657600080fd5b50565b611a128161163d565b8114611a1d57600080fd5b5056fea26469706673582212201ee3f778280492652107a96cfc5d1a1edb9f789b1683d576c0a92006cffaae2564736f6c63430008040033";

export class DCLToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DCLToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<DCLToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): DCLToken {
    return super.attach(address) as DCLToken;
  }
  connect(signer: Signer): DCLToken__factory {
    return super.connect(signer) as DCLToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCLTokenInterface {
    return new utils.Interface(_abi) as DCLTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DCLToken {
    return new Contract(address, _abi, signerOrProvider) as DCLToken;
  }
}
